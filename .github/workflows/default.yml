# Config ID: workflow.default
#
# This configuration file is auto-generated
# by https://github.com/otto-ec/assets_protecty.
#
# Do not modify this file unless you know what you do.
# All changes will be overwritten during next update run.
#
# If you need to modify this file permanently then place your configuration overrides in
# - .github/gitty.yml#/configs/workflow/default,
#
# and use the schema appropriate to this file.
# See https://github.com/otto-ec/assets_protecty#readme for more details and documentation.
#
# This config can be affected by these presets: base, default, integration, tf-update, integration-tf, terraform, lint, dispatch-deploy, no-specs, non-assets, pkg-pnpm
#
name: Build, Test, Lint
"on":
  push:
    branches:
      - main
    paths-ignore:
      - LICENSE
      - CHANGELOG.md
      - README.md
      - docs/*
      - .bulldozer.yml
      - .policy.yml
      - .versionrc
      - .github/gitty.yml
      - .github/stale.yml
      - .github/settings.yml
      - .github/pr-labeler.yml
      - .github/dependabot.yml
      - .github/workflows/deploy.yml
      - .github/workflows/issue_*.yml
      - .github/workflows/pull_*.yml
      - .github/workflows/repository_*.yml
      - .github/workflows/private_deps_*.yml
      - .github/workflows/tf_deps_*.yml
      - changes/*
      - changes/**
  pull_request: {}
  pull_request_target: {}
  workflow_dispatch:
    inputs:
      npm_publish:
        description: trigger npm release
        type: boolean
permissions: read-all
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TOOLBOX: $(npm bin)/toolbox
  RUN_COMPILE: true
  PKG_MANAGER: npm
  PKG_INSTALL_CMD: npm ci
  COMPILE_COMMAND: $(npm bin)/tsc --noEmit
  GITHUB_CHECKOUT_REF: ${{ github.event.pull_request.head.ref }}
jobs:
  checkrun:
    runs-on: ubuntu-latest
    if: >-
      ${{  github.event.pull_request == null ||  (  (
      startsWith(github.event.pull_request.user.login, 'dependabot') == false &&
      github.event_name == 'pull_request' ) || (
      startsWith(github.event.pull_request.user.login, 'dependabot') == true &&
      github.event_name == 'pull_request_target' ) ) }}
    steps:
      - run: echo "begin workflow run"
  build:
    runs-on: ubuntu-latest
    needs:
      - checkrun
    strategy:
      matrix:
        node-version:
          - 16.x
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
        id: checkout
        with:
          ref: ${{ env.GITHUB_CHECKOUT_REF }}
      - uses: pnpm/action-setup@v2
        id: setup_pnpm
        if: ${{ env.PKG_MANAGER == 'pnpm' }}
        with:
          version: 7
      - uses: actions/setup-node@v3
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ env.PKG_MANAGER }}
      - name: Install Dependencies
        id: pkg_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: ${{ env.PKG_INSTALL_CMD }}
      - name: Build sources with npm script
        timeout-minutes: 2
        id: build
        run: ${{ env.PKG_MANAGER }} run build
      - name: Compile sources with typescript
        timeout-minutes: 3
        id: compile
        if: ${{ env.RUN_COMPILE == 'true' }}
        run: ${{ env.COMPILE_COMMAND }}
      - uses: actions/cache@v3
        id: cache_workspace
        with:
          path: ./
          key: >-
            workspace-${{ runner.os }}-id-${{ github.run_id }}-sha-${{
            github.sha }}
  build-complete:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: ðŸš€ all build jobs have been run successfully ðŸš€
        run: echo ðŸŽ‰ðŸŽ‰ðŸŽ‰
  license:
    runs-on: ubuntu-latest
    needs:
      - build-complete
    strategy:
      matrix:
        node-version:
          - 16.x
      fail-fast: true
    steps:
      - uses: actions/cache@v3
        id: cache_workspace
        with:
          path: ./
          key: >-
            workspace-${{ runner.os }}-id-${{ github.run_id }}-sha-${{
            github.sha }}
      - uses: pnpm/action-setup@v2
        id: setup_pnpm
        if: ${{ env.PKG_MANAGER == 'pnpm' }}
        with:
          version: 7
      - uses: actions/setup-node@v3
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ env.PKG_MANAGER }}
      - name: Check Dependency License Usage
        id: check_license
        run: ${{ env.TOOLBOX }} chk lic
  license-complete:
    runs-on: ubuntu-latest
    needs:
      - license
    steps:
      - name: ðŸš€ all license jobs have been run successfully ðŸš€
        run: echo ðŸŽ‰ðŸŽ‰ðŸŽ‰
  jscpd:
    continue-on-error: true
    if: >-
      ${{ startsWith(github.event.pull_request.user.login, 'dependabot') ==
      false }}
    runs-on: ubuntu-latest
    needs:
      - build-complete
    strategy:
      matrix:
        node-version:
          - 16.x
      fail-fast: true
    steps:
      - uses: actions/cache@v3
        id: cache_workspace
        with:
          path: ./
          key: >-
            workspace-${{ runner.os }}-id-${{ github.run_id }}-sha-${{
            github.sha }}
      - uses: pnpm/action-setup@v2
        id: setup_pnpm
        if: ${{ env.PKG_MANAGER == 'pnpm' }}
        with:
          version: 7
      - uses: actions/setup-node@v3
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ env.PKG_MANAGER }}
      - name: Run jscpd to collect code duplicates
        id: jscpd
        run: |
          npx jscpd \
            --output tmp/jscpd \
            --format typescript,json,javascript \
            --reporters console,html \
            --gitignore
  audit:
    continue-on-error: true
    if: >-
      ${{ startsWith(github.event.pull_request.user.login, 'dependabot') ==
      false }}
    runs-on: ubuntu-latest
    needs:
      - build-complete
    strategy:
      matrix:
        node-version:
          - 16.x
      fail-fast: true
    steps:
      - uses: actions/cache@v3
        id: cache_workspace
        with:
          path: ./
          key: >-
            workspace-${{ runner.os }}-id-${{ github.run_id }}-sha-${{
            github.sha }}
      - uses: pnpm/action-setup@v2
        id: setup_pnpm
        if: ${{ env.PKG_MANAGER == 'pnpm' }}
        with:
          version: 7
      - uses: actions/setup-node@v3
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ env.PKG_MANAGER }}
      - name: Check dependencies for Vulnerabilities
        id: npm_audit
        run: |
          npm set audit-level=high
          npm audit --only prod
  bump_versions:
    runs-on: ubuntu-latest
    needs:
      - build-complete
    if: ${{ github.event.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2.4.0
        id: checkout
        with:
          persist-credentials: false
          fetch-depth: 300
      - name: Install Npm Dependencies
        id: npm_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: npm ci
      - name: Configure Git
        run: >
          git config --local user.email
          "41898282+github-actions[bot]@users.noreply.github.com"

          git config --local user.name "github-actions[bot]"
      - name: Bump Specs Versions
        id: builder
        run: |
          npm run bump;

          COUNT=$(git status | grep "changes\/" | grep version.yaml | wc -l);
          echo "Got Modified Data: ${COUNT}";
          echo "modified=${COUNT}" >> $GITHUB_OUTPUT;
      - name: Commit changes
        if: steps.builder.outputs.modified > 0
        run: |
          git add changes
          git commit --no-verify -am "chore(changes): update specs versions";
      - name: Publish new package
        id: bump_publish
        if: >-
          steps.builder.outputs.modified > 0 || github.event.inputs.npm_publish
          == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: >
          git remote set-url origin
          https://FKT-assets-github:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git;
          ${{ env.TOOLBOX }} app publish --yes;
