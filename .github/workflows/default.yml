name: Build, Test, Lint
'on':
  push:
    branches:
      - main
    paths-ignore:
      - .bulldozer.yml
      - .policy.yml
      - .versionrc
      - LICENSE
      - .github/gitty.yml
      - .github/stale.yml
      - .github/settings.yml
      - .github/pr-labeler.yml
      - .github/dependabot.yml
      - .github/workflows/issue_*.yml
      - .github/workflows/pull_*.yml
      - .github/workflows/repository_*.yml
      - .github/workflows/private_deps_*.yml
      - .github/workflows/tf_deps_*.yml
  pull_request_target: {}
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TOOLBOX: $(npm bin)/toolbox
  RUN_COMPILE: true
  COMPILE_COMMAND: $(npm bin)/tsc --noEmit
  RUN_PERSIST_TESTRESULTS: false
  RUN_PERSIST_COVERAGE: false
  RUN_PERSIST_DIST: false
  RUN_PERSIST_JSCPD: false
  TF_PLAN_STACK: deploy
jobs:
  build-complete:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: ðŸš€ all build jobs have been run successfully ðŸš€
        run: echo ðŸŽ‰ðŸŽ‰ðŸŽ‰
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14.x
      fail-fast: false
    steps:
      - uses: actions/checkout@v2.3.4
        id: checkout
      - uses: actions/setup-node@v2.1.5
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2.1.5
        id: setup_cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Npm Dependencies
        id: npm_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: npm ci
      - name: Build sources with npm script
        id: build
        run: npm run build
      - name: Compile sources with typescript
        id: compile
        if: ${{ env.RUN_COMPILE == 'true' }}
        run: ${{ env.COMPILE_COMMAND }}
      - name: Persist dist
        id: persist_dist
        if: ${{ env.RUN_PERSIST_DIST == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ${{ github.workspace }}/dist
  specs-complete:
    runs-on: ubuntu-latest
    needs:
      - specs
    steps:
      - name: ðŸš€ all spec jobs have been run successfully ðŸš€
        run: echo ðŸŽ‰ðŸŽ‰ðŸŽ‰
  specs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 12.x
          - 14.x
      fail-fast: false
    needs:
      - build-complete
    env:
      JEST_JUNIT_OUTPUT_DIR: tmp/test-results/jest
      JEST_JUNIT_OUTPUT_NAME: results.xml
      RUN_PRE_SPECS: ''
      SPECS_COMMANDLINE: |
        $(npm bin)/jest --colors -w 2 --ci --silent --clearCache \
          --coverageDirectory tmp/coverage --coverage \
          --coverageReporters json json-summary text html clover \
          --reporters default --reporters jest-junit
    steps:
      - uses: actions/checkout@v2.3.4
        id: checkout
      - uses: actions/setup-node@v2.1.5
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2.1.5
        id: setup_cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Npm Dependencies
        id: npm_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: npm ci
      - name: Run Custom Process before Specs
        id: run_pre_specs
        if: ${{ env.RUN_PRE_SPECS != '' }}
        run: ${{ env.RUN_PRE_SPECS }}
      - name: Execute Tests
        id: specs
        env:
          NODE_ICU_DATA: ${{ env.TEST_ICU_DATA }}
        run: ${{ env.SPECS_COMMANDLINE }}
      - name: Persist coverage Results
        if: ${{ env.RUN_PERSIST_COVERAGE == 'true' }}
        id: persist_coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ${{ github.workspace }}/tmp/coverage
      - name: Persist Test Results
        if: ${{ env.RUN_PERSIST_TESTRESULTS == 'true' }}
        id: persist_test_results
        uses: actions/upload-artifact@v2
        with:
          name: spec-results
          path: ${{ github.workspace }}/tmp/test-results
  license-complete:
    runs-on: ubuntu-latest
    needs:
      - license
    steps:
      - name: ðŸš€ all license jobs have been run successfully ðŸš€
        run: echo ðŸŽ‰ðŸŽ‰ðŸŽ‰
  license:
    runs-on: ubuntu-latest
    needs:
      - build-complete
    strategy:
      matrix:
        node-version:
          - 14.x
      fail-fast: true
    steps:
      - uses: actions/checkout@v2.3.4
        id: checkout
      - uses: actions/setup-node@v2.1.5
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2.1.5
        id: setup_cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Npm Dependencies
        id: npm_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: npm ci
      - name: Check Dependency License Usage
        id: check_license
        run: ${{ env.TOOLBOX }} chk lic
  jscpd:
    continue-on-error: true
    if: >-
      github.event.pull_request.user.login != 'dependabot[bot]' &&
      github.event.pull_request.user.login != 'dependabot-preview[bot]'
    runs-on: ubuntu-latest
    needs:
      - build-complete
    strategy:
      matrix:
        node-version:
          - 14.x
      fail-fast: true
    steps:
      - uses: actions/checkout@v2.3.4
        id: checkout
      - uses: actions/setup-node@v2.1.5
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2.1.5
        id: setup_cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Npm Dependencies
        id: npm_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: npm ci
      - name: Run jscpd to collect code duplicates
        id: jscpd
        run: |
          npx jscpd \
            --output tmp/jscpd \
            --format typescript,json,javascript \
            --reporters console,html \
            --gitignore
      - name: Persist Jscpd Results
        id: persist_jscpd
        if: ${{ env.RUN_PERSIST_JSCPD == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: jscpd
          path: ${{ github.workspace }}/tmp/jscpd
  audit:
    continue-on-error: true
    if: >-
      github.event.pull_request.user.login != 'dependabot[bot]' &&
      github.event.pull_request.user.login != 'dependabot-preview[bot]'
    runs-on: ubuntu-latest
    needs:
      - build-complete
    strategy:
      matrix:
        node-version:
          - 14.x
      fail-fast: true
    steps:
      - uses: actions/checkout@v2.3.4
        id: checkout
      - uses: actions/setup-node@v2.1.5
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2.1.5
        id: setup_cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Npm Dependencies
        id: npm_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: npm ci
      - name: Check dependencies for Vulnerabilities
        id: npm_audit
        run: |
          npm set audit-level=high
          npm audit
  lint:
    runs-on: ubuntu-latest
    needs:
      - build-complete
    strategy:
      matrix:
        node-version:
          - 14.x
      fail-fast: true
    steps:
      - uses: actions/checkout@v2.3.4
        id: checkout
      - uses: actions/setup-node@v2.1.5
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2.1.5
        id: setup_cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Npm Dependencies
        id: npm_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: npm ci
      - name: Lint Sources
        id: lint
        run: npm run lint:src --silent
      - name: Lint Specs
        run: npm run lint:docs --silent
  dispatch_deploy:
    runs-on: ubuntu-latest
    needs:
      - specs-complete
      - lint
      - license-complete
    if: github.event.ref == 'refs/heads/main'
    env:
      EVENT_TYPE: deploy
      EVENT_PAYLOAD: '{"ref": "${{ github.head_ref }}", "sha": "${{ github.sha }}"}'
      EVENT_REPO: ${{ github.repository }}
    steps:
      - name: Dispatch Deploy Trigger Event
        id: dispatch_event
        uses: peter-evans/repository-dispatch@v1.1.3
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          event-type: ${{ env.EVENT_TYPE }}
          client-payload: ${{ env.EVENT_PAYLOAD }}
          repository: ${{ env.EVENT_REPO }}
