# Config ID: workflow.npm_publish
#
# This configuration file is auto-generated
# by https://github.com/otto-ec/assets_protecty.
#
# Do not modify this file unless you know what you do.
# All changes will be overwritten during next update run.
#
# If you need to modify this file permanently then place your configuration overrides in
# - .github/gitty.yml#/configs/workflow/npm_publish,
#
# and use the schema appropriate to this file.
# See https://github.com/otto-ec/assets_protecty#readme for more details and documentation.
#
# This config can be affected by these presets: default, npm-package, no-specs, pkg-pnpm
#
env:
  RUN_SPECS: false
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TOOLBOX: $(npm bin)/toolbox
  PKG_MANAGER: npm
  PKG_INSTALL_CMD: npm ci
name: Publish Npm Package
"on":
  release:
    types:
      - prereleased
      - released
  workflow_dispatch:
    inputs:
      prerelease:
        description: if set to true, will make a prerelease
        required: true
        default: "true"
jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16.x
      fail-fast: true
    env:
      JEST_JUNIT_OUTPUT_DIR: tmp/test-results/jest
      JEST_JUNIT_OUTPUT_NAME: results.xml
      SPECS_COMMANDLINE: |
        $(npm bin)/jest --colors -w 2 --ci --silent --coverage \
          --coverageDirectory tmp/coverage --coverageReporters json json-summary text html clover \
          --reporters default --reporters jest-junit
    steps:
      - uses: actions/checkout@v3
        id: checkout
      - uses: pnpm/action-setup@v2
        id: setup_pnpm
        if: ${{ env.PKG_MANAGER == 'pnpm' }}
        with:
          version: 7
      - uses: actions/setup-node@v3
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
          cache: ${{ env.PKG_MANAGER }}
      - name: Install Dependencies
        id: pkg_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: ${{ env.PKG_INSTALL_CMD }}
      - name: Build Sources
        id: build
        run: ${{ env.PKG_MANAGER }} run build
      - name: Execute Tests
        id: specs
        if: ${{ env.RUN_SPECS == 'true' }}
        env:
          NODE_ICU_DATA: ${{ env.TEST_ICU_DATA }}
        run: ${{ env.SPECS_COMMANDLINE }}
      - name: Publish Prerelease with next tag
        id: release
        if: >-
          ${{  github.event.release.prerelease == true ||
          github.event.inputs.prerelease == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: ${{ env.PKG_MANAGER }} publish --tag next
      - name: Publish Release with latest tag
        id: prerelease
        if: >-
          ${{  github.event.release.prerelease == false ||
          github.event.inputs.prerelease == 'false' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: npm publish
      - name: Get commit message
        id: commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%B");
          echo "Commit message: ${COMMIT_MESSAGE}";
          echo "message=${COMMIT_MESSAGE}" >> $GITHUB_OUTPUT;
      - name: Dispatch Deploy Trigger Event
        id: dispatch_event
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          event-type: publish
          repository: otto-ec/ottoapi_portal
          client-payload: |-
            {
              "ref": "${{ github.head_ref }}",
              "sha": "${{ github.sha }}",
              "reason": {
                "module": "guidelines",
                "message": ${{ toJSON(steps.commit_message.outputs.message) }},
                "user": "${{ github.event.head_commit.author.name }}"
              }
            }
