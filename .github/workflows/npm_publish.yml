# Config ID: workflow.npm_publish
# 
# This configuration file is auto-generated
# by https://github.com/otto-ec/assets_protecty.
# 
# Do not modify this file unless you know what you do.
# All changes will be overwritten during next update run.
# 
# If you need to modify this file permanently then place your configuration overrides in
# - .github/gitty.yml#/configs/workflow/npm_publish,
# 
# and use the schema appropriate to this file.
# See https://github.com/otto-ec/assets_protecty#readme for more details and documentation.
# 
# This config can be affected by these presets: default, npm-package, no-specs
# 
env:
  RUN_SPECS: false
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TOOLBOX: $(npm bin)/toolbox
name: Publish Npm Package
"on":
  release:
    types:
      - prereleased
      - released
jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14.x
      fail-fast: true
    env:
      JEST_JUNIT_OUTPUT_DIR: tmp/test-results/jest
      JEST_JUNIT_OUTPUT_NAME: results.xml
      SPECS_COMMANDLINE: |
        $(npm bin)/jest --colors -w 2 --ci --silent --coverage \
          --coverageDirectory tmp/coverage --coverageReporters json json-summary text html clover \
          --reporters default --reporters jest-junit
    steps:
      - uses: actions/checkout@v3
        id: checkout
      - uses: actions/setup-node@v3
        id: setup_node
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
          cache: npm
      - name: Install Npm Dependencies
        id: npm_install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: npm ci
      - name: Build Sources
        id: build
        run: npm run build
      - name: Execute Tests
        id: specs
        if: ${{ env.RUN_SPECS == 'true' }}
        env:
          NODE_ICU_DATA: ${{ env.TEST_ICU_DATA }}
        run: ${{ env.SPECS_COMMANDLINE }}
      - name: Publish Prerelease with next tag
        id: release
        if: github.event.release.prerelease
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: npm publish --tag next
      - name: Publish Release with latest tag
        id: prerelease
        if: "!github.event.release.prerelease"
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: npm publish
